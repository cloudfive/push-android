buildscript {
    ext.kotlin_version = '1.3.11'
    ext.dokka_version = '0.9.16'

    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://jitpack.io"
        }
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:$dokka_version"
    }
}

repositories {
    jcenter()
    google()
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'org.jetbrains.dokka-android'

apply plugin: 'maven-publish'

version = "1.0.0"

// For publishing to a local Maven repository for testing
// Add the following repo to the app you want to
publishing {
    publications {
        localPublication(MavenPublication) {
            groupId 'com.cloudfiveapp'
            artifactId 'push-android'
            version version

            artifact(sourcesJar)
            artifact("$buildDir/outputs/aar/push-android-release.aar")
        }
    }

    repositories {
        mavenLocal()
    }
}

if (file('my.gradle').exists()) {
    apply from: 'my.gradle'
}

android {
    compileSdkVersion 27
    // Ideally, we would re-write CloudFivePush to use a newer HTTP library.
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName version
        if (!project.hasProperty("cloudfivedev")) {
            ext.cloudfivedev = "false"
        }
        buildConfigField "boolean", "CLOUDFIVE_DEV", ext.cloudfivedev
        if (ext.cloudfivedev) {
            buildConfigField 'String', 'BASE_ENDPOINT', '"https://cloudfive.10fw.net"'
        } else {
            buildConfigField 'String', 'BASE_ENDPOINT', '"https://www.cloudfiveapp.com"'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "com.google.firebase:firebase-core:16.0.1"
    implementation "com.google.firebase:firebase-messaging:17.1.0"
}

def siteUrl = 'https://github.com/cloudfive/push-android' // Homepage URL of the library
def gitUrl = 'https://github.com/cloudfive/push-android.git' // Git repository URL
group = "com.cloudfiveapp" // Maven Group ID for the artifact

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'

                // Add your description here
                name 'Android client for push notifications from cloudfiveapp.com'
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'brian'
                        name 'Brian Samson'
                        email 'brian@cloudfiveapp.com'
                    }
                }

                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = javadoc.destinationDir
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from "$buildDir/javadoc"
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def bintrayUser = properties.getProperty('bintrayUser')
def bintrayKey = properties.getProperty('bintrayKey')

bintray {
    user = bintrayUser
    key = bintrayKey

    configurations = ['archives']
    dryRun = false //Whether to run this as dry-run, without deploying
    publish = true //If version should be auto published after an upload

    pkg {
        repo = 'maven'
        name = 'push-android'
        desc = 'Android client library for push notifications via cloudfiveapp.com'
        websiteUrl = 'https://github.com/cloudfive/push-android'
        issueTrackerUrl = 'https://github.com/cloudfive/push-android/issues'
        vcsUrl = 'https://github.com/cloudfive/push-android.git'
        licenses = ['MIT']
        labels = ['gcm', 'push', 'push notifications']
        publicDownloadNumbers = true
    }
}
